
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ActividadesScalarFieldEnum = {
  id: 'id',
  label: 'label',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.CacheScalarFieldEnum = {
  key: 'key',
  value: 'value',
  expiration: 'expiration'
};

exports.Prisma.Cache_locksScalarFieldEnum = {
  key: 'key',
  owner: 'owner',
  expiration: 'expiration'
};

exports.Prisma.ClientesScalarFieldEnum = {
  id: 'id',
  rfc: 'rfc',
  nombre: 'nombre',
  fechaNacimiento: 'fechaNacimiento',
  direccion: 'direccion',
  colonia: 'colonia',
  codigoPostal: 'codigoPostal',
  estado_id: 'estado_id',
  ciudad: 'ciudad',
  correo: 'correo',
  telefono: 'telefono',
  celular: 'celular',
  oficina: 'oficina',
  casa: 'casa',
  observaciones: 'observaciones',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CompaniaScalarFieldEnum = {
  id: 'id',
  rfc: 'rfc',
  nombre: 'nombre',
  nombreCorto: 'nombreCorto',
  direccion: 'direccion',
  estado: 'estado',
  codigoPostal: 'codigoPostal',
  ciudad: 'ciudad',
  limitePrimerPago: 'limitePrimerPago',
  limitePrimerSubsecuente: 'limitePrimerSubsecuente',
  estatus: 'estatus',
  colonia: 'colonia',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Compania_representantesScalarFieldEnum = {
  id: 'id',
  compania_id: 'compania_id',
  nombre: 'nombre',
  telefono: 'telefono',
  correo: 'correo',
  cargo: 'cargo',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Companias_productosScalarFieldEnum = {
  id: 'id',
  compania_id: 'compania_id',
  ramo_id: 'ramo_id',
  nombre: 'nombre',
  created_at: 'created_at',
  updated_at: 'updated_at',
  estatus: 'estatus'
};

exports.Prisma.Companias_ramosScalarFieldEnum = {
  id: 'id',
  compania_id: 'compania_id',
  ramo_id: 'ramo_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  estatus: 'estatus'
};

exports.Prisma.EstadosScalarFieldEnum = {
  id: 'id',
  label: 'label',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Estatus_clienteScalarFieldEnum = {
  id: 'id',
  label: 'label',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Estatus_polizasScalarFieldEnum = {
  id: 'id',
  label: 'label',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Failed_jobsScalarFieldEnum = {
  id: 'id',
  uuid: 'uuid',
  connection: 'connection',
  queue: 'queue',
  payload: 'payload',
  exception: 'exception',
  failed_at: 'failed_at'
};

exports.Prisma.Formas_de_pagoScalarFieldEnum = {
  id: 'id',
  label: 'label',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Job_batchesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  total_jobs: 'total_jobs',
  pending_jobs: 'pending_jobs',
  failed_jobs: 'failed_jobs',
  failed_job_ids: 'failed_job_ids',
  options: 'options',
  cancelled_at: 'cancelled_at',
  created_at: 'created_at',
  finished_at: 'finished_at'
};

exports.Prisma.JobsScalarFieldEnum = {
  id: 'id',
  queue: 'queue',
  payload: 'payload',
  attempts: 'attempts',
  reserved_at: 'reserved_at',
  available_at: 'available_at',
  created_at: 'created_at'
};

exports.Prisma.Metodos_de_pagoScalarFieldEnum = {
  id: 'id',
  label: 'label',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.MigrationsScalarFieldEnum = {
  id: 'id',
  migration: 'migration',
  batch: 'batch'
};

exports.Prisma.MonedasScalarFieldEnum = {
  id: 'id',
  label: 'label',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Password_reset_tokensScalarFieldEnum = {
  email: 'email',
  token: 'token',
  created_at: 'created_at'
};

exports.Prisma.Personal_access_tokensScalarFieldEnum = {
  id: 'id',
  tokenable_type: 'tokenable_type',
  tokenable_id: 'tokenable_id',
  name: 'name',
  token: 'token',
  abilities: 'abilities',
  last_used_at: 'last_used_at',
  expires_at: 'expires_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Poliza_aseguradosScalarFieldEnum = {
  id: 'id',
  poliza_id: 'poliza_id',
  cliente_id: 'cliente_id',
  rfc: 'rfc',
  nombre: 'nombre',
  fechaNacimiento: 'fechaNacimiento',
  direccion: 'direccion',
  colonia: 'colonia',
  codigoPostal: 'codigoPostal',
  estado_id: 'estado_id',
  ciudad: 'ciudad',
  correo: 'correo',
  telefono: 'telefono',
  celular: 'celular',
  oficina: 'oficina',
  casa: 'casa',
  observaciones: 'observaciones',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Poliza_historialScalarFieldEnum = {
  id: 'id',
  poliza_id: 'poliza_id',
  accion: 'accion',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Poliza_recibosScalarFieldEnum = {
  id: 'id',
  poliza_id: 'poliza_id',
  numeroRecibo: 'numeroRecibo',
  vencimiento: 'vencimiento',
  importe: 'importe',
  estatus: 'estatus',
  fechaPago: 'fechaPago',
  fechaCancelado: 'fechaCancelado',
  evidencia: 'evidencia',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PolizasScalarFieldEnum = {
  id: 'id',
  numeroPoliza: 'numeroPoliza',
  numeroCliente: 'numeroCliente',
  inicioVigencia: 'inicioVigencia',
  finVigencia: 'finVigencia',
  antiguedad: 'antiguedad',
  primaNeta: 'primaNeta',
  financiamiento: 'financiamiento',
  primaTotal: 'primaTotal',
  estatus_id: 'estatus_id',
  comisionAgente: 'comisionAgente',
  pagoInicial: 'pagoInicial',
  pagoSubsecuente: 'pagoSubsecuente',
  cliente_id: 'cliente_id',
  formaPago_id: 'formaPago_id',
  tipoVencimiento_id: 'tipoVencimiento_id',
  compania_id: 'compania_id',
  subAgente_id: 'subAgente_id',
  ramo_id: 'ramo_id',
  metodoPago_id: 'metodoPago_id',
  moneda_id: 'moneda_id',
  producto_id: 'producto_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RamosScalarFieldEnum = {
  id: 'id',
  label: 'label',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.SessionsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  payload: 'payload',
  last_activity: 'last_activity'
};

exports.Prisma.Tipos_de_usuariosScalarFieldEnum = {
  id: 'id',
  label: 'label',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.Tipos_de_vencimientoScalarFieldEnum = {
  id: 'id',
  label: 'label',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at',
  deleted_at: 'deleted_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  email_verified_at: 'email_verified_at',
  password: 'password',
  remember_token: 'remember_token',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Usuario_clavesScalarFieldEnum = {
  id: 'id',
  compania_id: 'compania_id',
  clave: 'clave',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at',
  usuario_id: 'usuario_id'
};

exports.Prisma.Usuario_teamScalarFieldEnum = {
  id: 'id',
  principal_id: 'principal_id',
  tipo_id: 'tipo_id',
  usuario_id: 'usuario_id',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UsuariosScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  correo: 'correo',
  password: 'password',
  tipo_id: 'tipo_id',
  estatus: 'estatus',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.actividadesOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.cacheOrderByRelevanceFieldEnum = {
  key: 'key',
  value: 'value'
};

exports.Prisma.cache_locksOrderByRelevanceFieldEnum = {
  key: 'key',
  owner: 'owner'
};

exports.Prisma.clientesOrderByRelevanceFieldEnum = {
  rfc: 'rfc',
  nombre: 'nombre',
  direccion: 'direccion',
  colonia: 'colonia',
  codigoPostal: 'codigoPostal',
  ciudad: 'ciudad',
  correo: 'correo',
  telefono: 'telefono',
  celular: 'celular',
  oficina: 'oficina',
  casa: 'casa',
  observaciones: 'observaciones'
};

exports.Prisma.companiaOrderByRelevanceFieldEnum = {
  rfc: 'rfc',
  nombre: 'nombre',
  nombreCorto: 'nombreCorto',
  direccion: 'direccion',
  estado: 'estado',
  codigoPostal: 'codigoPostal',
  ciudad: 'ciudad',
  colonia: 'colonia'
};

exports.Prisma.compania_representantesOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  telefono: 'telefono',
  correo: 'correo',
  cargo: 'cargo'
};

exports.Prisma.companias_productosOrderByRelevanceFieldEnum = {
  nombre: 'nombre'
};

exports.Prisma.estadosOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.estatus_clienteOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.estatus_polizasOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.failed_jobsOrderByRelevanceFieldEnum = {
  uuid: 'uuid',
  connection: 'connection',
  queue: 'queue',
  payload: 'payload',
  exception: 'exception'
};

exports.Prisma.formas_de_pagoOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.job_batchesOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  failed_job_ids: 'failed_job_ids',
  options: 'options'
};

exports.Prisma.jobsOrderByRelevanceFieldEnum = {
  queue: 'queue',
  payload: 'payload'
};

exports.Prisma.metodos_de_pagoOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.migrationsOrderByRelevanceFieldEnum = {
  migration: 'migration'
};

exports.Prisma.monedasOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.password_reset_tokensOrderByRelevanceFieldEnum = {
  email: 'email',
  token: 'token'
};

exports.Prisma.personal_access_tokensOrderByRelevanceFieldEnum = {
  tokenable_type: 'tokenable_type',
  name: 'name',
  token: 'token',
  abilities: 'abilities'
};

exports.Prisma.poliza_aseguradosOrderByRelevanceFieldEnum = {
  rfc: 'rfc',
  nombre: 'nombre',
  direccion: 'direccion',
  colonia: 'colonia',
  codigoPostal: 'codigoPostal',
  ciudad: 'ciudad',
  correo: 'correo',
  telefono: 'telefono',
  celular: 'celular',
  oficina: 'oficina',
  casa: 'casa',
  observaciones: 'observaciones'
};

exports.Prisma.poliza_historialOrderByRelevanceFieldEnum = {
  accion: 'accion'
};

exports.Prisma.poliza_recibosOrderByRelevanceFieldEnum = {
  numeroRecibo: 'numeroRecibo',
  evidencia: 'evidencia'
};

exports.Prisma.polizasOrderByRelevanceFieldEnum = {
  numeroPoliza: 'numeroPoliza',
  numeroCliente: 'numeroCliente'
};

exports.Prisma.ramosOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.sessionsOrderByRelevanceFieldEnum = {
  id: 'id',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  payload: 'payload'
};

exports.Prisma.tipos_de_usuariosOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.tipos_de_vencimientoOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.usersOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  password: 'password',
  remember_token: 'remember_token'
};

exports.Prisma.usuario_clavesOrderByRelevanceFieldEnum = {
  clave: 'clave'
};

exports.Prisma.usuariosOrderByRelevanceFieldEnum = {
  nombre: 'nombre',
  correo: 'correo',
  password: 'password'
};
exports.poliza_recibos_estatus = exports.$Enums.poliza_recibos_estatus = {
  Pendiente: 'Pendiente',
  Pagado: 'Pagado',
  Cancelado: 'Cancelado'
};

exports.Prisma.ModelName = {
  actividades: 'actividades',
  cache: 'cache',
  cache_locks: 'cache_locks',
  clientes: 'clientes',
  compania: 'compania',
  compania_representantes: 'compania_representantes',
  companias_productos: 'companias_productos',
  companias_ramos: 'companias_ramos',
  estados: 'estados',
  estatus_cliente: 'estatus_cliente',
  estatus_polizas: 'estatus_polizas',
  failed_jobs: 'failed_jobs',
  formas_de_pago: 'formas_de_pago',
  job_batches: 'job_batches',
  jobs: 'jobs',
  metodos_de_pago: 'metodos_de_pago',
  migrations: 'migrations',
  monedas: 'monedas',
  password_reset_tokens: 'password_reset_tokens',
  personal_access_tokens: 'personal_access_tokens',
  poliza_asegurados: 'poliza_asegurados',
  poliza_historial: 'poliza_historial',
  poliza_recibos: 'poliza_recibos',
  polizas: 'polizas',
  ramos: 'ramos',
  sessions: 'sessions',
  tipos_de_usuarios: 'tipos_de_usuarios',
  tipos_de_vencimiento: 'tipos_de_vencimiento',
  users: 'users',
  usuario_claves: 'usuario_claves',
  usuario_team: 'usuario_team',
  usuarios: 'usuarios'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
